import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;


public class MySqlConnector {
	
	private String url;
	
	public MySqlConnector(String url){
		this.url = url;
	try{
		Class.forName("com.mysql.jdbc.Driver").newInstance();
		System.out.println("JDBC driver registered");
	} catch (Exception ex) {
		ex.printStackTrace();
	}
	}
	
	private Connection getConnection() {
		String[] temp = this.url.split("/");
		String dbName = temp[1];
		try {
			boolean exists = false;
			Connection conn = DriverManager
					.getConnection("jdbc:mysql://localhost/HRS" + "user=root&password=cake");

			System.out.println("Got Mysql database connection");
			ResultSet rs = conn.getMetaData().getCatalogs();
			while (rs.next()){
				if(rs.getString(1).equals(dbName)){
					conn.setCatalog(dbName);
					exists = true;
					ResultSet table = conn.getMetaData().getTables(null, null, "hrs", null);
					if (!table.next()){
						PreparedStatement stmt2 = conn.prepareStatement("Create table Customer Information('First Name' varchar(20)," 
									+ " 'Last Name' varchar(20), " + " 'Phone Number' int(10), " + " 'Billing Address' varchar(35), "
								    + " 'Billing City' varchar(20), " + " 'Billing State' varchar(3), " + " 'Billing Zip' int(8), "
									+ " 'Customer Id' int(11) Auto_increment, " + " 'Checkin Date' date, " + " 'Checkout Date' date,"
								    + " PRIMARY KEY('Customer Id'));");
						stmt2.executeUpdate();
						
						PreparedStatement stmt3 = conn.prepareStatement("Create table Room Info('Room type' enum('Single', 'Double', 'Presidential'),"
									+ " 'Room Price' enum('100', '150', '300')," + " 'Current Occupant' varchar(20)," + " 'Room Number' int(10)," +
									" PRIMARY KEY('Room Number'));");
						stmt3.executeUpdate();
						
						PreparedStatement stmt4 = conn.prepareStatement("Create table Transactions ('Transaction id' int(11)," + " 'Customer Id' int(11)," 
									+ " 'Room Id' int(11)," + " 'Amount' int(10)," + " 'Credit Card Number' int(11)," + "Expiration Date' date" 
									+ "PRIMARY KEY('Transaction Id'));");
						stmt4.executeUpdate();
						
					}
				}
				
			}
			if(!exists){
				PreparedStatement stmt1 =	conn.prepareStatement("CREATE DATABASE " + dbName);
				stmt1.executeUpdate();
				conn.setCatalog(dbName);
				PreparedStatement stmt2 = conn.prepareStatement("Create table Customer Information('First Name' varchar(20)," 
						+ " 'Last Name' varchar(20), " + " 'Phone Number' int(10), " + " 'Billing Address' varchar(35), "
					    + " 'Billing City' varchar(20), " + " 'Billing State' varchar(3), " + " 'Billing Zip' int(8), "
						+ " 'Customer Id' int(11) Auto_increment, " + " 'Checkin Date' date, " + " 'Checkout Date' date,"
					    + " PRIMARY KEY('Customer Id'));");
				stmt2.executeUpdate();
			
				PreparedStatement stmt3 = conn.prepareStatement("Create table Room Info('Room type' enum('Single', 'Double', 'Presidential'),"
						+ " 'Room Price' enum('100', '150', '300')," + " 'Current Occupant' varchar(20)," + " 'Room Number' int(10)," +
						" PRIMARY KEY('Room Number'));");
				stmt3.executeUpdate();
			
				PreparedStatement stmt4 = conn.prepareStatement("Create table Transactions ('Transaction id' int(11)," + " 'Customer Id' int(11)," 
						+ " 'Room Id' int(11)," + " 'Amount' int(10)," + " 'Credit Card Number' int(11)," + "Expiration Date' date" 
						+ "PRIMARY KEY('Transaction Id'));");
				stmt4.executeUpdate();
			}
			return conn;
		} catch (SQLException ex) {
			// handle any errors
			System.out.println("SQLException: " + ex.getMessage());
			System.out.println("SQLState: " + ex.getSQLState());
			System.out.println("VendorError: " + ex.getErrorCode());
		}
		return null;
	}
	
	public void createCustomer(){
		
	}
	
	public void reserveRoom(){
		
	}

}
